/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface GroupingInterface extends ethers.utils.Interface {
  functions: {
    "rgToken()": FunctionFragment;
    "addAsset(uint256)": FunctionFragment;
    "isAssetAdded(uint256)": FunctionFragment;
    "getAssets()": FunctionFragment;
    "getRGToken()": FunctionFragment;
    "getERC721Address()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "rgToken", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "addAsset",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isAssetAdded",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "getAssets", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getRGToken",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getERC721Address",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "rgToken", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "addAsset", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isAssetAdded",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getAssets", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getRGToken", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getERC721Address",
    data: BytesLike
  ): Result;

  events: {};
}

export class Grouping extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: GroupingInterface;

  functions: {
    rgToken(overrides?: CallOverrides): Promise<[string]>;

    "rgToken()"(overrides?: CallOverrides): Promise<[string]>;

    addAsset(
      _asset: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addAsset(uint256)"(
      _asset: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    isAssetAdded(
      _asset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isAssetAdded(uint256)"(
      _asset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getAssets(overrides?: CallOverrides): Promise<[BigNumber[]]>;

    "getAssets()"(overrides?: CallOverrides): Promise<[BigNumber[]]>;

    getRGToken(overrides?: CallOverrides): Promise<[string]>;

    "getRGToken()"(overrides?: CallOverrides): Promise<[string]>;

    getERC721Address(overrides?: CallOverrides): Promise<[string]>;

    "getERC721Address()"(overrides?: CallOverrides): Promise<[string]>;
  };

  rgToken(overrides?: CallOverrides): Promise<string>;

  "rgToken()"(overrides?: CallOverrides): Promise<string>;

  addAsset(
    _asset: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addAsset(uint256)"(
    _asset: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  isAssetAdded(
    _asset: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isAssetAdded(uint256)"(
    _asset: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getAssets(overrides?: CallOverrides): Promise<BigNumber[]>;

  "getAssets()"(overrides?: CallOverrides): Promise<BigNumber[]>;

  getRGToken(overrides?: CallOverrides): Promise<string>;

  "getRGToken()"(overrides?: CallOverrides): Promise<string>;

  getERC721Address(overrides?: CallOverrides): Promise<string>;

  "getERC721Address()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    rgToken(overrides?: CallOverrides): Promise<string>;

    "rgToken()"(overrides?: CallOverrides): Promise<string>;

    addAsset(_asset: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    "addAsset(uint256)"(
      _asset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isAssetAdded(
      _asset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isAssetAdded(uint256)"(
      _asset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getAssets(overrides?: CallOverrides): Promise<BigNumber[]>;

    "getAssets()"(overrides?: CallOverrides): Promise<BigNumber[]>;

    getRGToken(overrides?: CallOverrides): Promise<string>;

    "getRGToken()"(overrides?: CallOverrides): Promise<string>;

    getERC721Address(overrides?: CallOverrides): Promise<string>;

    "getERC721Address()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    rgToken(overrides?: CallOverrides): Promise<BigNumber>;

    "rgToken()"(overrides?: CallOverrides): Promise<BigNumber>;

    addAsset(_asset: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "addAsset(uint256)"(
      _asset: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    isAssetAdded(
      _asset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isAssetAdded(uint256)"(
      _asset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAssets(overrides?: CallOverrides): Promise<BigNumber>;

    "getAssets()"(overrides?: CallOverrides): Promise<BigNumber>;

    getRGToken(overrides?: CallOverrides): Promise<BigNumber>;

    "getRGToken()"(overrides?: CallOverrides): Promise<BigNumber>;

    getERC721Address(overrides?: CallOverrides): Promise<BigNumber>;

    "getERC721Address()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    rgToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "rgToken()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    addAsset(
      _asset: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addAsset(uint256)"(
      _asset: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    isAssetAdded(
      _asset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isAssetAdded(uint256)"(
      _asset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAssets(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getAssets()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getRGToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getRGToken()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getERC721Address(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getERC721Address()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
