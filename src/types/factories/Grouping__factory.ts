/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Grouping } from "../Grouping";

export class Grouping__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _rgToken: string,
    _erc721: string,
    overrides?: Overrides
  ): Promise<Grouping> {
    return super.deploy(
      _rgToken,
      _erc721,
      overrides || {}
    ) as Promise<Grouping>;
  }
  getDeployTransaction(
    _rgToken: string,
    _erc721: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_rgToken, _erc721, overrides || {});
  }
  attach(address: string): Grouping {
    return super.attach(address) as Grouping;
  }
  connect(signer: Signer): Grouping__factory {
    return super.connect(signer) as Grouping__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Grouping {
    return new Contract(address, _abi, signerOrProvider) as Grouping;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rgToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc721",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rgToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_uids",
        type: "uint256[]",
      },
    ],
    name: "addAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105c23803806105c28339818101604052604081101561003357600080fd5b50805160209091015161004533610121565b6001600160a01b0382166100a0576040805162461bcd60e51b815260206004820152601c60248201527f524720546f6b656e20616464726573732063616e6e6f74206265203000000000604482015290519081900360640190fd5b6001600160a01b0381166100fb576040805162461bcd60e51b815260206004820152601a60248201527f45524337323120616464726573732063616e6e6f742062652030000000000000604482015290519081900360640190fd5b50600180546001600160a01b0319166001600160a01b0392909216919091179055610143565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b610470806101526000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80638da5cb5b1461005c578063cf35bdd014610080578063f110a60e146100af578063f2fde38b146100b7578063f60a7436146100df575b600080fd5b610064610182565b604080516001600160a01b039092168252519081900360200190f35b61009d6004803603602081101561009657600080fd5b5035610191565b60408051918252519081900360200190f35b6100646101af565b6100dd600480360360208110156100cd57600080fd5b50356001600160a01b03166101be565b005b6100dd600480360360208110156100f557600080fd5b81019060208101813564010000000081111561011057600080fd5b82018360208201111561012257600080fd5b8035906020019184602083028401116401000000008311171561014457600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506102cb945050505050565b6000546001600160a01b031690565b6002818154811061019e57fe5b600091825260209091200154905081565b6001546001600160a01b031681565b6101c6610182565b6001600160a01b0316336001600160a01b031614610221576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b6001600160a01b038116610274576040805162461bcd60e51b815260206004820152601560248201527406e6577206f776e65722063616e6e6f74206265203605c1b604482015290519081900360640190fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e061029d610182565b604080516001600160a01b03928316815291841660208301528051918290030190a16102c881610418565b50565b6102d3610182565b6001600160a01b0316336001600160a01b03161461032e576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b606481511115610385576040805162461bcd60e51b815260206004820152601f60248201527f4d6178696d756d206f6620746f6b656e7320746f206164642069732031303000604482015290519081900360640190fd5b60005b81518160ff1610156104145760036000838360ff16815181106103a757fe5b60209081029190910181015182528101919091526040016000205460ff1661040c57600160036000848460ff16815181106103de57fe5b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600101610388565b5050565b600080546001600160a01b0319166001600160a01b039290921691909117905556fea264697066735822122017fc4499400202ec181a13d0c8a667b39d59543136d83ae6ba7be5098388e7ef64736f6c63430007000033";
