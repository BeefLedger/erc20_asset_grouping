{
  "contractName": "ERC721BeefLedgerV1_1",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "multisig",
          "type": "address"
        }
      ],
      "name": "setMultisigWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeV11",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_assets",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_groupingAddress",
          "type": "address"
        }
      ],
      "name": "addAssetsToGrouping",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_assets\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_groupingAddress\",\"type\":\"address\"}],\"name\":\"addAssetsToGrouping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeV11\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"multisig\",\"type\":\"address\"}],\"name\":\"setMultisigWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of return uint256 representing the amount owned by the passed address\"}},\"burn(uint256)\":{\"details\":\"Burns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned.\"}},\"exists(uint256)\":{\"details\":\"Returns whether the specified token exists.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the existence of return bool whether the token exists\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of return address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of return bool whether the given operator is approved by the given owner\",\"owner\":\"owner address which you want to query the approval of\"}},\"owner()\":{\"details\":\"Tells the address of the owner return the address of the owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/santiago/projects/beefledger/erc20_asset_grouping/src/ethereum/contracts/V1_1/ERC721BeefLedgerV1_1.sol\":\"ERC721BeefLedgerV1_1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/santiago/projects/beefledger/erc20_asset_grouping/src/ethereum/contracts/Grouping.sol\":{\"keccak256\":\"0x1154896c9983eed859ccc1505c98e7aa0f11e19711b896b0d058010cdaf8c12b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35f05377fcde925cf1e15f5cec0d782a2683a9bcc11c0ef8280cc957b27df381\",\"dweb:/ipfs/QmUM3eWpoec6P38tUXCEHqyspqnJWdhPB9VzeWJ7V2bgqp\"]},\"/home/santiago/projects/beefledger/erc20_asset_grouping/src/ethereum/contracts/Ownable.sol\":{\"keccak256\":\"0x964303431ae2c14ab2872dccd3a47f1ada16eeaa306fc3af3fdd9b7e111ca6a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40d290c1b5ef186710d0ea1b04e584cf083d7aa62fd67cc9c7ce1326854e5438\",\"dweb:/ipfs/QmWPXb9BzihgZU92xVGJxYqELRj36Wbq2tf3kLhWHuaXLc\"]},\"/home/santiago/projects/beefledger/erc20_asset_grouping/src/ethereum/contracts/V1_0/CompaniesV1_0.sol\":{\"keccak256\":\"0xaafe12654f198c20675c643d6297ab8e5dfefd26b391313b6a380ab8d68f4f26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d467b7be4e67c0c3b78f3bde36123098f3690f6b3307da318c65a4c77e1cef90\",\"dweb:/ipfs/QmdmN6ut5X5FD4qTZWAmhcx8QTKBRcawUJFXAnkhrSEnHN\"]},\"/home/santiago/projects/beefledger/erc20_asset_grouping/src/ethereum/contracts/V1_0/ERC721BeefLedgerV1_0.sol\":{\"keccak256\":\"0xee0b059fa25e559c7463007fb2c6ff3338e2c5ea277db82181a596229d36c00c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f6be3b41b225e3a0415ef55044fa9371e420e4f0ee1217b41dcca6ac2961d25\",\"dweb:/ipfs/QmZ5k4kjGxNhJQjre4cfHQoLyt3fzF82LJBtubr4K7u5Ug\"]},\"/home/santiago/projects/beefledger/erc20_asset_grouping/src/ethereum/contracts/V1_0/MultisigWalletV1_0.sol\":{\"keccak256\":\"0x028d206cad0f30356d78720422a2eb31b3f397cb970feba78b3a7633c412857a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b232d48dc22cef22337260588d4a24c2f33c22896b5d444486696e5ebc59dd9f\",\"dweb:/ipfs/QmQw1EaPszfvSnpoNiynD2SNCtE5caojUcRxP8Xsp92DN7\"]},\"/home/santiago/projects/beefledger/erc20_asset_grouping/src/ethereum/contracts/V1_0/ResourceActionsV1_0.sol\":{\"keccak256\":\"0x4d17aa3f1f7cc68cd232f2fd46310aa18c350797d4354eec12cbd94e75075859\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1043e4e78ce44bb0ecc04a29b979803fde6206b23eb2fdfca955e69d382f3226\",\"dweb:/ipfs/QmPQEabkPWDn3jeRJAQ2tN7EHXymJqrmkimEjKx3hP1MYf\"]},\"/home/santiago/projects/beefledger/erc20_asset_grouping/src/ethereum/contracts/V1_1/ERC721BeefLedgerV1_1.sol\":{\"keccak256\":\"0x93ad2c87b0b3e553a9bb82408fe19c5b98b9bf89f7fce8e1317f020f995cc135\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac8fabe888102b2946477a16b356cabde31f51fe3fc3b2bd871851593c87b529\",\"dweb:/ipfs/QmeLHGWKzAW2pVZX6XWumQ5H2nbCyoA5D6DAWCxUKnJdP4\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x21662e4254ce4ac8570b30cc7ab31435966b3cb778a56ba4d09276881cfb2437\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acce8fe6adc670f9987a8b6aedc4cc0abcd0dcd2e152d649a12099d735bd7bad\",\"dweb:/ipfs/QmXAk17oK3daBmA8CGyVcU56L496jW3U6Ef1WkfHyB1JAV\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b610041565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6117bc806100506000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638da5cb5b116100a2578063d1d274ce11610071578063d1d274ce146102da578063de836ebd14610388578063e985e9c51461043b578063f08b82e614610469578063f2fde38b146104715761010b565b80638da5cb5b14610261578063a22cb46514610269578063c41a360a14610297578063c4d66de8146102b45761010b565b80634f558e79116100de5780634f558e79146101ca57806364913477146101fb57806370a082311461022157806376b8a793146102595761010b565b8063081812fc14610110578063095ea7b31461014957806323b872dd1461017757806342966c68146101ad575b600080fd5b61012d6004803603602081101561012657600080fd5b5035610497565b604080516001600160a01b039092168252519081900360200190f35b6101756004803603604081101561015f57600080fd5b506001600160a01b0381351690602001356104f9565b005b6101756004803603606081101561018d57600080fd5b506001600160a01b0381358116916020810135909116906040013561060a565b610175600480360360208110156101c357600080fd5b503561065f565b6101e7600480360360208110156101e057600080fd5b50356106b0565b604080519115158252519081900360200190f35b6101756004803603602081101561021157600080fd5b50356001600160a01b03166106cd565b6102476004803603602081101561023757600080fd5b50356001600160a01b03166107af565b60408051918252519081900360200190f35b61017561081d565b61012d610884565b6101756004803603604081101561027f57600080fd5b506001600160a01b0381351690602001351515610893565b61012d600480360360208110156102ad57600080fd5b503561095f565b610175600480360360208110156102ca57600080fd5b50356001600160a01b031661097a565b610175600480360360408110156102f057600080fd5b81019060208101813564010000000081111561030b57600080fd5b82018360208201111561031d57600080fd5b8035906020019184602083028401116401000000008311171561033f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b03169150610a619050565b6101e76004803603604081101561039e57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156103c957600080fd5b8201836020820111156103db57600080fd5b803590602001918460208302840111640100000000831117156103fd57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610ce9945050505050565b6101e76004803603604081101561045157600080fd5b506001600160a01b0381358116916020013516610e8e565b610247610ebc565b6101756004803603602081101561048757600080fd5b50356001600160a01b0316610ecd565b60006104a2826106b0565b6104dd5760405162461bcd60e51b815260040180806020018281038252602c81526020018061163f602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b600061050482610fd7565b9050806001600160a01b0316836001600160a01b031614156105575760405162461bcd60e51b81526004018080602001828103825260218152602001806116946021913960400191505060405180910390fd5b336001600160a01b038216148061057357506105738133610e8e565b6105ae5760405162461bcd60e51b81526004018080602001828103825260388152602001806115926038913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b610614338261102b565b61064f5760405162461bcd60e51b81526004018080602001828103825260318152602001806117016031913960400191505060405180910390fd5b61065a8383836110cf565b505050565b610669338261102b565b6106a45760405162461bcd60e51b81526004018080602001828103825260308152602001806117576030913960400191505060405180910390fd5b6106ad81611213565b50565b6000908152600160205260409020546001600160a01b0316151590565b6106d5610884565b6001600160a01b0316336001600160a01b031614610730576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b6001600160a01b03811661078b576040805162461bcd60e51b815260206004820152601c60248201527f4d756c746973696720416464726573732063616e6e6f74206265203000000000604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0383161790556106ad81611225565b60006001600160a01b0382166107f65760405162461bcd60e51b815260040180806020018281038252602a8152602001806115ca602a913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902061081790611247565b92915050565b60085460ff1615610875576040805162461bcd60e51b815260206004820152601960248201527f636f6e747261637420616c726561647920757067726164656400000000000000604482015290519081900360640190fd5b6008805460ff19166001179055565b6000546001600160a01b031690565b6001600160a01b0382163314156108f1576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6000908152600160205260409020546001600160a01b031690565b600654600160a01b900460ff16156109d9576040805162461bcd60e51b815260206004820152601c60248201527f436f6e747261637420616c726561647920696e697469616c697a656400000000604482015290519081900360640190fd5b6001600160a01b038116610a28576040805162461bcd60e51b815260206004820152601160248201527004f776e65722063616e6e6f74206265203607c1b604482015290519081900360640190fd5b610a3181611225565b6006805460ff60a01b196001600160a01b039093166001600160a01b03199091161791909116600160a01b179055565b6001600160a01b038116610aa65760405162461bcd60e51b81526004018080602001828103825260258152602001806116dc6025913960400191505060405180910390fd5b606482511115610afd576040805162461bcd60e51b815260206004820152601f60248201527f6d6178696d756d206f6620746f6b656e7320746f206164642069732031303000604482015290519081900360640190fd5b604080516340d2fe7f60e11b8152336004820152905182916001600160a01b038316916381a5fcfe91602480820192602092909190829003018186803b158015610b4657600080fd5b505afa158015610b5a573d6000803e3d6000fd5b505050506040513d6020811015610b7057600080fd5b5051610b7b57600080fd5b60005b83518160ff161015610ce3576000848260ff1681518110610b9b57fe5b60200260200101519050336001600160a01b0316610bb882610fd7565b6001600160a01b031614610c07576040805162461bcd60e51b81526020600482015260116024820152703ab9b2b91034b9903737ba1037bbb732b960791b604482015290519081900360640190fd5b826001600160a01b0316630b71d256826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015610c4d57600080fd5b505af1158015610c61573d6000803e3d6000fd5b505050506040513d6020811015610c7757600080fd5b5051610cb45760405162461bcd60e51b81526004018080602001828103825260278152602001806116b56027913960400191505060405180910390fd5b600090815260076020526040902080546001600160a01b0319166001600160a01b038516179055600101610b7e565b50505050565b600654604080516317aa5fb760e11b815233600482015290516000926001600160a01b031691632f54bf6e916024808301926020929190829003018186803b158015610d3457600080fd5b505afa158015610d48573d6000803e3d6000fd5b505050506040513d6020811015610d5e57600080fd5b5051610d9b5760405162461bcd60e51b815260040180806020018281038252602281526020018061161d6022913960400191505060405180910390fd5b606482511115610df2576040805162461bcd60e51b815260206004820181905260248201527f6d6178696d756d206f6620746f6b656e7320746f206d696e7420697320313030604482015290519081900360640190fd5b6001600160a01b038316610e4d576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b60005b82518160ff161015610e8457610e7c84848360ff1681518110610e6f57fe5b602002602001015161124b565b600101610e50565b5060019392505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000610ec86005611247565b905090565b610ed5610884565b6001600160a01b0316336001600160a01b031614610f30576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b6001600160a01b038116610f83576040805162461bcd60e51b815260206004820152601560248201527406e6577206f776e65722063616e6e6f74206265203605c1b604482015290519081900360640190fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0610fac610884565b604080516001600160a01b03928316815291841660208301528051918290030190a16106ad81611225565b6000818152600160205260408120546001600160a01b0316806108175760405162461bcd60e51b81526004018080602001828103825260298152602001806115f46029913960400191505060405180910390fd5b6000611036826106b0565b6110715760405162461bcd60e51b815260040180806020018281038252602c815260200180611566602c913960400191505060405180910390fd5b600061107c83610fd7565b9050806001600160a01b0316846001600160a01b031614806110b75750836001600160a01b03166110ac84610497565b6001600160a01b0316145b806110c757506110c78185610e8e565b949350505050565b826001600160a01b03166110e282610fd7565b6001600160a01b0316146111275760405162461bcd60e51b815260040180806020018281038252602981526020018061166b6029913960400191505060405180910390fd5b6001600160a01b03821661116c5760405162461bcd60e51b81526004018080602001828103825260248152602001806115426024913960400191505060405180910390fd5b6111758161132b565b6001600160a01b038316600090815260036020526040902061119690611366565b6001600160a01b03821660009081526003602052604090206111b790611377565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6106ad61121f82610fd7565b82611380565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b5490565b611254816106b0565b156112a6576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600390915290206112e590611377565b6112ef6005611377565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000818152600260205260409020546001600160a01b0316156106ad57600090815260026020526040902080546001600160a01b0319169055565b8054611373906001611461565b9055565b80546001019055565b816001600160a01b031661139382610fd7565b6001600160a01b0316146113d85760405162461bcd60e51b81526004018080602001828103825260258152602001806117326025913960400191505060405180910390fd5b6113e18161132b565b6001600160a01b038216600090815260036020526040902061140290611366565b61140c6005611366565b60008181526001602052604080822080546001600160a01b0319169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006114a383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506114aa565b9392505050565b600081848411156115395760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114fe5781810151838201526020016114e6565b50505050905090810190601f16801561152b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e5369676e657220646f6573206e6f742062656c6f6e6720746f204d756c74697369674552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572617373657420636f756c64206e6f742062652073746f72656420696e746f2067726f7570696e6747726f7570696e6720636f6e747261637420616464726573732063616e6e6f7420626520304552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a264697066735822122072fa981fc55b1010a5d6455ac3a97800bfa6043786bedfdedf25d64c6e1b6f5964736f6c63430007000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80638da5cb5b116100a2578063d1d274ce11610071578063d1d274ce146102da578063de836ebd14610388578063e985e9c51461043b578063f08b82e614610469578063f2fde38b146104715761010b565b80638da5cb5b14610261578063a22cb46514610269578063c41a360a14610297578063c4d66de8146102b45761010b565b80634f558e79116100de5780634f558e79146101ca57806364913477146101fb57806370a082311461022157806376b8a793146102595761010b565b8063081812fc14610110578063095ea7b31461014957806323b872dd1461017757806342966c68146101ad575b600080fd5b61012d6004803603602081101561012657600080fd5b5035610497565b604080516001600160a01b039092168252519081900360200190f35b6101756004803603604081101561015f57600080fd5b506001600160a01b0381351690602001356104f9565b005b6101756004803603606081101561018d57600080fd5b506001600160a01b0381358116916020810135909116906040013561060a565b610175600480360360208110156101c357600080fd5b503561065f565b6101e7600480360360208110156101e057600080fd5b50356106b0565b604080519115158252519081900360200190f35b6101756004803603602081101561021157600080fd5b50356001600160a01b03166106cd565b6102476004803603602081101561023757600080fd5b50356001600160a01b03166107af565b60408051918252519081900360200190f35b61017561081d565b61012d610884565b6101756004803603604081101561027f57600080fd5b506001600160a01b0381351690602001351515610893565b61012d600480360360208110156102ad57600080fd5b503561095f565b610175600480360360208110156102ca57600080fd5b50356001600160a01b031661097a565b610175600480360360408110156102f057600080fd5b81019060208101813564010000000081111561030b57600080fd5b82018360208201111561031d57600080fd5b8035906020019184602083028401116401000000008311171561033f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b03169150610a619050565b6101e76004803603604081101561039e57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156103c957600080fd5b8201836020820111156103db57600080fd5b803590602001918460208302840111640100000000831117156103fd57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610ce9945050505050565b6101e76004803603604081101561045157600080fd5b506001600160a01b0381358116916020013516610e8e565b610247610ebc565b6101756004803603602081101561048757600080fd5b50356001600160a01b0316610ecd565b60006104a2826106b0565b6104dd5760405162461bcd60e51b815260040180806020018281038252602c81526020018061163f602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b600061050482610fd7565b9050806001600160a01b0316836001600160a01b031614156105575760405162461bcd60e51b81526004018080602001828103825260218152602001806116946021913960400191505060405180910390fd5b336001600160a01b038216148061057357506105738133610e8e565b6105ae5760405162461bcd60e51b81526004018080602001828103825260388152602001806115926038913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b610614338261102b565b61064f5760405162461bcd60e51b81526004018080602001828103825260318152602001806117016031913960400191505060405180910390fd5b61065a8383836110cf565b505050565b610669338261102b565b6106a45760405162461bcd60e51b81526004018080602001828103825260308152602001806117576030913960400191505060405180910390fd5b6106ad81611213565b50565b6000908152600160205260409020546001600160a01b0316151590565b6106d5610884565b6001600160a01b0316336001600160a01b031614610730576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b6001600160a01b03811661078b576040805162461bcd60e51b815260206004820152601c60248201527f4d756c746973696720416464726573732063616e6e6f74206265203000000000604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0383161790556106ad81611225565b60006001600160a01b0382166107f65760405162461bcd60e51b815260040180806020018281038252602a8152602001806115ca602a913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902061081790611247565b92915050565b60085460ff1615610875576040805162461bcd60e51b815260206004820152601960248201527f636f6e747261637420616c726561647920757067726164656400000000000000604482015290519081900360640190fd5b6008805460ff19166001179055565b6000546001600160a01b031690565b6001600160a01b0382163314156108f1576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6000908152600160205260409020546001600160a01b031690565b600654600160a01b900460ff16156109d9576040805162461bcd60e51b815260206004820152601c60248201527f436f6e747261637420616c726561647920696e697469616c697a656400000000604482015290519081900360640190fd5b6001600160a01b038116610a28576040805162461bcd60e51b815260206004820152601160248201527004f776e65722063616e6e6f74206265203607c1b604482015290519081900360640190fd5b610a3181611225565b6006805460ff60a01b196001600160a01b039093166001600160a01b03199091161791909116600160a01b179055565b6001600160a01b038116610aa65760405162461bcd60e51b81526004018080602001828103825260258152602001806116dc6025913960400191505060405180910390fd5b606482511115610afd576040805162461bcd60e51b815260206004820152601f60248201527f6d6178696d756d206f6620746f6b656e7320746f206164642069732031303000604482015290519081900360640190fd5b604080516340d2fe7f60e11b8152336004820152905182916001600160a01b038316916381a5fcfe91602480820192602092909190829003018186803b158015610b4657600080fd5b505afa158015610b5a573d6000803e3d6000fd5b505050506040513d6020811015610b7057600080fd5b5051610b7b57600080fd5b60005b83518160ff161015610ce3576000848260ff1681518110610b9b57fe5b60200260200101519050336001600160a01b0316610bb882610fd7565b6001600160a01b031614610c07576040805162461bcd60e51b81526020600482015260116024820152703ab9b2b91034b9903737ba1037bbb732b960791b604482015290519081900360640190fd5b826001600160a01b0316630b71d256826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015610c4d57600080fd5b505af1158015610c61573d6000803e3d6000fd5b505050506040513d6020811015610c7757600080fd5b5051610cb45760405162461bcd60e51b81526004018080602001828103825260278152602001806116b56027913960400191505060405180910390fd5b600090815260076020526040902080546001600160a01b0319166001600160a01b038516179055600101610b7e565b50505050565b600654604080516317aa5fb760e11b815233600482015290516000926001600160a01b031691632f54bf6e916024808301926020929190829003018186803b158015610d3457600080fd5b505afa158015610d48573d6000803e3d6000fd5b505050506040513d6020811015610d5e57600080fd5b5051610d9b5760405162461bcd60e51b815260040180806020018281038252602281526020018061161d6022913960400191505060405180910390fd5b606482511115610df2576040805162461bcd60e51b815260206004820181905260248201527f6d6178696d756d206f6620746f6b656e7320746f206d696e7420697320313030604482015290519081900360640190fd5b6001600160a01b038316610e4d576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b60005b82518160ff161015610e8457610e7c84848360ff1681518110610e6f57fe5b602002602001015161124b565b600101610e50565b5060019392505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000610ec86005611247565b905090565b610ed5610884565b6001600160a01b0316336001600160a01b031614610f30576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b6001600160a01b038116610f83576040805162461bcd60e51b815260206004820152601560248201527406e6577206f776e65722063616e6e6f74206265203605c1b604482015290519081900360640190fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0610fac610884565b604080516001600160a01b03928316815291841660208301528051918290030190a16106ad81611225565b6000818152600160205260408120546001600160a01b0316806108175760405162461bcd60e51b81526004018080602001828103825260298152602001806115f46029913960400191505060405180910390fd5b6000611036826106b0565b6110715760405162461bcd60e51b815260040180806020018281038252602c815260200180611566602c913960400191505060405180910390fd5b600061107c83610fd7565b9050806001600160a01b0316846001600160a01b031614806110b75750836001600160a01b03166110ac84610497565b6001600160a01b0316145b806110c757506110c78185610e8e565b949350505050565b826001600160a01b03166110e282610fd7565b6001600160a01b0316146111275760405162461bcd60e51b815260040180806020018281038252602981526020018061166b6029913960400191505060405180910390fd5b6001600160a01b03821661116c5760405162461bcd60e51b81526004018080602001828103825260248152602001806115426024913960400191505060405180910390fd5b6111758161132b565b6001600160a01b038316600090815260036020526040902061119690611366565b6001600160a01b03821660009081526003602052604090206111b790611377565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6106ad61121f82610fd7565b82611380565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b5490565b611254816106b0565b156112a6576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600390915290206112e590611377565b6112ef6005611377565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000818152600260205260409020546001600160a01b0316156106ad57600090815260026020526040902080546001600160a01b0319169055565b8054611373906001611461565b9055565b80546001019055565b816001600160a01b031661139382610fd7565b6001600160a01b0316146113d85760405162461bcd60e51b81526004018080602001828103825260258152602001806117326025913960400191505060405180910390fd5b6113e18161132b565b6001600160a01b038216600090815260036020526040902061140290611366565b61140c6005611366565b60008181526001602052604080822080546001600160a01b0319169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006114a383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506114aa565b9392505050565b600081848411156115395760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114fe5781810151838201526020016114e6565b50505050905090810190601f16801561152b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e5369676e657220646f6573206e6f742062656c6f6e6720746f204d756c74697369674552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572617373657420636f756c64206e6f742062652073746f72656420696e746f2067726f7570696e6747726f7570696e6720636f6e747261637420616464726573732063616e6e6f7420626520304552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a264697066735822122072fa981fc55b1010a5d6455ac3a97800bfa6043786bedfdedf25d64c6e1b6f5964736f6c63430007000033",
  "immutableReferences": {},
  "sourceMap": "136:1069:10:-:0;;;;;;;;;;;;-1:-1:-1;818:20:2;827:10;818:8;:20::i;:::-;136:1069:10;;1059:73:2;1110:6;:17;;-1:-1:-1;;;;;;1110:17:2;-1:-1:-1;;;;;1110:17:2;;;;;;;;;;1059:73::o;136:1069:10:-;;;;;;;",
  "deployedSourceMap": "136:1069:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4030:207:6;;;;;;;;;;;;;;;;-1:-1:-1;4030:207:6;;:::i;:::-;;;;-1:-1:-1;;;;;4030:207:6;;;;;;;;;;;;;;3327:419;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3327:419:6;;;;;;;;:::i;:::-;;5692:293;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5692:293:6;;;;;;;;;;;;;;;;;:::i;8358:231::-;;;;;;;;;;;;;;;;-1:-1:-1;8358:231:6;;:::i;6179:157::-;;;;;;;;;;;;;;;;-1:-1:-1;6179:157:6;;:::i;:::-;;;;;;;;;;;;;;;;;;1801:245;;;;;;;;;;;;;;;;-1:-1:-1;1801:245:6;-1:-1:-1;;;;;1801:245:6;;:::i;2249:214::-;;;;;;;;;;;;;;;;-1:-1:-1;2249:214:6;-1:-1:-1;;;;;2249:214:6;;:::i;:::-;;;;;;;;;;;;;;;;362:135:10;;;:::i;937:71:2:-;;;:::i;4530:251:6:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4530:251:6;;;;;;;;;;:::i;10812:140::-;;;;;;;;;;;;;;;;-1:-1:-1;10812:140:6;;:::i;1356:294::-;;;;;;;;;;;;;;;;-1:-1:-1;1356:294:6;-1:-1:-1;;;;;1356:294:6;;:::i;503:700:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;503:700:10;;-1:-1:-1;;;503:700:10;;-1:-1:-1;;;;;503:700:10;;-1:-1:-1;503:700:10;;-1:-1:-1;503:700:10:i;7303:375:6:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7303:375:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7303:375:6;;-1:-1:-1;7303:375:6;;-1:-1:-1;;;;;7303:375:6:i;5102:153::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5102:153:6;;;;;;;;;;:::i;10705:101::-;;;:::i;1293:203:2:-;;;;;;;;;;;;;;;;-1:-1:-1;1293:203:2;-1:-1:-1;;;;;1293:203:2;;:::i;4030:207:6:-;4097:7;4124:15;4131:7;4124:6;:15::i;:::-;4116:72;;;;-1:-1:-1;;;4116:72:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4206:24:6;;;;:15;:24;;;;;;-1:-1:-1;;;;;4206:24:6;;4030:207::o;3327:419::-;3398:13;3414:16;3422:7;3414;:16::i;:::-;3398:32;;3454:5;-1:-1:-1;;;;;3448:11:6;:2;-1:-1:-1;;;;;3448:11:6;;;3440:57;;;;-1:-1:-1;;;3440:57:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3516:10;-1:-1:-1;;;;;3516:19:6;;;;:58;;;3539:35;3556:5;3563:10;3539:16;:35::i;:::-;3508:148;;;;-1:-1:-1;;;3508:148:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3667:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3667:29:6;-1:-1:-1;;;;;3667:29:6;;;;;;;;;3711:28;;3667:24;;3711:28;;;;;;;3327:419;;;:::o;5692:293::-;5842:39;5861:10;5873:7;5842:18;:39::i;:::-;5834:101;;;;-1:-1:-1;;;5834:101:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5946:32;5960:4;5966:2;5970:7;5946:13;:32::i;:::-;5692:293;;;:::o;8358:231::-;8466:39;8485:10;8497:7;8466:18;:39::i;:::-;8458:100;;;;-1:-1:-1;;;8458:100:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8568:14;8574:7;8568:5;:14::i;:::-;8358:231;:::o;6179:157::-;6241:4;6273:20;;;:11;:20;;;;;;-1:-1:-1;;;;;6273:20:6;6310:19;;;6179:157::o;1801:245::-;650:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;636:21:2;:10;-1:-1:-1;;;;;636:21:2;;628:53;;;;;-1:-1:-1;;;628:53:2;;;;;;;;;;;;-1:-1:-1;;;628:53:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;1897:22:6;::::1;1889:63;;;::::0;;-1:-1:-1;;;1889:63:6;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;1962:18;:49:::0;;-1:-1:-1;;;;;;1962:49:6::1;-1:-1:-1::0;;;;;1962:49:6;::::1;;::::0;;2021:18:::1;1962:49:::0;2021:8:::1;:18::i;2249:214::-:0;2312:7;-1:-1:-1;;;;;2339:19:6;;2331:74;;;;-1:-1:-1;;;2331:74:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2422:24:6;;;;;;:17;:24;;;;;:34;;:32;:34::i;:::-;2415:41;2249:214;-1:-1:-1;;2249:214:6:o;362:135:10:-;413:15;;;;412:16;404:54;;;;;-1:-1:-1;;;404:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:15;:22;;-1:-1:-1;;468:22:10;486:4;468:22;;;362:135::o;937:71:2:-;975:7;997:6;-1:-1:-1;;;;;997:6:2;937:71;:::o;4530:251:6:-;-1:-1:-1;;;;;4617:16:6;;4623:10;4617:16;;4609:54;;;;;-1:-1:-1;;;4609:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;4693:10;4674:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4674:34:6;;;;;;;;;;;;:45;;-1:-1:-1;;4674:45:6;;;;;;;;;;4734:40;;;;;;;4674:34;;4693:10;4734:40;;;;;;;;;;;4530:251;;:::o;10812:140::-;10868:7;10903:20;;;:11;:20;;;;;;-1:-1:-1;;;;;10903:20:6;;10812:140::o;1356:294::-;1426:12;;-1:-1:-1;;;1426:12:6;;;;1425:13;1417:54;;;;;-1:-1:-1;;;1417:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1489:20:6;;1481:50;;;;;-1:-1:-1;;;1481:50:6;;;;;;;;;;;;-1:-1:-1;;;1481:50:6;;;;;;;;;;;;;;;1541:16;1550:6;1541:8;:16::i;:::-;1567:18;:47;;-1:-1:-1;;;;;;;;;1567:47:6;;;-1:-1:-1;;;;;;1567:47:6;;;;1624:19;;;;-1:-1:-1;;;1624:19:6;;;1356:294::o;503:700:10:-;-1:-1:-1;;;;;619:30:10;;611:80;;;;-1:-1:-1;;;611:80:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;727:3;709:7;:14;:21;;701:65;;;;;-1:-1:-1;;;701:65:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;840:39;;;-1:-1:-1;;;840:39:10;;868:10;840:39;;;;;;805:16;;-1:-1:-1;;;;;840:27:10;;;;;:39;;;;;;;;;;;;;;;:27;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;840:39:10;832:48;;;;;;894:7;890:307;911:7;:14;907:1;:18;;;890:307;;;946:13;962:7;970:1;962:10;;;;;;;;;;;;;;;;946:26;;1012:10;-1:-1:-1;;;;;994:28:10;:14;1002:5;994:7;:14::i;:::-;-1:-1:-1;;;;;994:28:10;;986:58;;;;;-1:-1:-1;;;986:58:10;;;;;;;;;;;;-1:-1:-1;;;986:58:10;;;;;;;;;;;;;;;1066:8;-1:-1:-1;;;;;1066:17:10;;1084:5;1066:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1066:24:10;1058:76;;;;-1:-1:-1;;;1058:76:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1148:19;;;;:12;:19;;;;;:38;;-1:-1:-1;;;;;;1148:38:10;-1:-1:-1;;;;;1148:38:10;;;;;-1:-1:-1;927:3:10;890:307;;;;503:700;;;:::o;7303:375:6:-;1700:18;;:38;;;-1:-1:-1;;;1700:38:6;;1727:10;1700:38;;;;;;7397:4;;-1:-1:-1;;;;;1700:18:6;;:26;;:38;;;;;;;;;;;;;;:18;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1700:38:6;1692:85;;;;-1:-1:-1;;;1692:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7440:3:::1;7421:8;:15;:22;;7413:67;;;::::0;;-1:-1:-1;;;7413:67:6;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;7498:16:6;::::1;7490:61;;;::::0;;-1:-1:-1;;;7490:61:6;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;7565:7;7561:90;7582:8;:15;7578:1;:19;;;7561:90;;;7618:22;7624:2;7628:8;7637:1;7628:11;;;;;;;;;;;;;;;;7618:5;:22::i;:::-;7599:3;;7561:90;;;-1:-1:-1::0;7667:4:6::1;::::0;7303:375;-1:-1:-1;;;7303:375:6:o;5102:153::-;-1:-1:-1;;;;;5213:25:6;;;5190:4;5213:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5102:153::o;10705:101::-;10752:7;10778:21;:11;:19;:21::i;:::-;10771:28;;10705:101;:::o;1293:203:2:-;650:7;:5;:7::i;:::-;-1:-1:-1;;;;;636:21:2;:10;-1:-1:-1;;;;;636:21:2;;628:53;;;;;-1:-1:-1;;;628:53:2;;;;;;;;;;;;-1:-1:-1;;;628:53:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;1369:22:2;::::1;1361:56;;;::::0;;-1:-1:-1;;;1361:56:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1361:56:2;;;;;;;;;;;;;::::1;;1428:39;1449:7;:5;:7::i;:::-;1428:39;::::0;;-1:-1:-1;;;;;1428:39:2;;::::1;::::0;;;;::::1;;::::0;::::1;::::0;;;;;;;;;::::1;1473:18;1482:8;1473;:18::i;2681:225:6:-:0;2738:7;2773:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2773:20:6;2811:19;2803:73;;;;-1:-1:-1;;;2803:73:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6696:336;6789:4;6813:15;6820:7;6813:6;:15::i;:::-;6805:72;;;;-1:-1:-1;;;6805:72:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6887:13;6903:16;6911:7;6903;:16::i;:::-;6887:32;;6948:5;-1:-1:-1;;;;;6937:16:6;:7;-1:-1:-1;;;;;6937:16:6;;:51;;;;6981:7;-1:-1:-1;;;;;6957:31:6;:20;6969:7;6957:11;:20::i;:::-;-1:-1:-1;;;;;6957:31:6;;6937:51;:87;;;;6992:32;7009:5;7016:7;6992:16;:32::i;:::-;6929:96;6696:336;-1:-1:-1;;;;6696:336:6:o;9902:455::-;10023:4;-1:-1:-1;;;;;10003:24:6;:16;10011:7;10003;:16::i;:::-;-1:-1:-1;;;;;10003:24:6;;9995:78;;;;-1:-1:-1;;;9995:78:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10091:16:6;;10083:65;;;;-1:-1:-1;;;10083:65:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10159:23;10174:7;10159:14;:23::i;:::-;-1:-1:-1;;;;;10193:23:6;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;10238:21:6;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;10282:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;10282:25:6;-1:-1:-1;;;;;10282:25:6;;;;;;;;;10323:27;;10282:20;;10323:27;;;;;;;9902:455;;;:::o;9419:98::-;9478:32;9484:16;9492:7;9484;:16::i;:::-;9502:7;9478:5;:32::i;1059:73:2:-;1110:6;:17;;-1:-1:-1;;;;;;1110:17:2;-1:-1:-1;;;;;1110:17:2;;;;;;;;;;1059:73::o;1106:112:19:-;1197:14;;1106:112::o;7931:295:6:-;8011:15;8018:7;8011:6;:15::i;:::-;8010:16;8002:57;;;;;-1:-1:-1;;;8002:57:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;8069:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;8069:25:6;-1:-1:-1;;;;;8069:25:6;;;;;;;;8104:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;8147:23;:11;:21;:23::i;:::-;8186:33;;8211:7;;-1:-1:-1;;;;;8186:33:6;;;8203:1;;8186:33;;8203:1;;8186:33;7931:295;;:::o;10519:180::-;10627:1;10591:24;;;:15;:24;;;;;;-1:-1:-1;;;;;10591:24:6;:38;10587:106;;10680:1;10645:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;10645:37:6;;;10519:180::o;1408:108:19:-;1488:14;;:21;;1507:1;1488:18;:21::i;:::-;1471:38;;1408:108::o;1224:178::-;1376:19;;1394:1;1376:19;;;1224:178::o;8865:365:6:-;8967:5;-1:-1:-1;;;;;8947:25:6;:16;8955:7;8947;:16::i;:::-;-1:-1:-1;;;;;8947:25:6;;8939:75;;;;-1:-1:-1;;;8939:75:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9025:23;9040:7;9025:14;:23::i;:::-;-1:-1:-1;;;;;9059:24:6;;;;;;:17;:24;;;;;:36;;:34;:36::i;:::-;9105:23;:11;:21;:23::i;:::-;9169:1;9138:20;;;:11;:20;;;;;;:33;;-1:-1:-1;;;;;;9138:33:6;;;9187:36;9150:7;;9169:1;-1:-1:-1;;;;;9187:36:6;;;;;9169:1;;9187:36;8865:365;;:::o;1329:134:16:-;1387:7;1413:43;1417:1;1420;1413:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1406:50;1329:134;-1:-1:-1;;;1329:134:16:o;1754:187::-;1840:7;1875:12;1867:6;;;;1859:29;;;;-1:-1:-1;;;1859:29:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1910:5:16;;;1754:187::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.8.0;\n\nimport \"../V1_0/ERC721BeefLedgerV1_0.sol\";\nimport \"../Grouping.sol\";\n\ncontract ERC721BeefLedgerV1_1 is ERC721BeefLedgerV1_0 {\n\n    //In the form of uid -> groupingContractAddress\n    mapping(uint256 => address) internal _groupedUids;\n\n     //upgradability\n    bool internal _initializedV11;\n\n    function initializeV11() public {\n        require(!_initializedV11, \"contract already upgraded\");\n        _initializedV11 = true;\n    }\n\n    function addAssetsToGrouping(uint256[] memory _assets, address _groupingAddress) virtual external {\n        require(_groupingAddress != address(0), \"Grouping contract address cannot be 0\");\n        require(_assets.length <= 100, \"maximum of tokens to add is 100\");\n        Grouping grouping = Grouping(_groupingAddress);\n        require(grouping.isOperatorApproved(msg.sender));\n        for(uint8 i = 0; i < _assets.length; i++) {\n            uint256 asset = _assets[i];\n            require(ownerOf(asset) == msg.sender, \"user is not owner\");\n            require(grouping.addAsset(asset), \"asset could not be stored into grouping\");\n            _groupedUids[asset] = _groupingAddress;\n        }\n    }\n}",
  "sourcePath": "/home/santiago/projects/beefledger/erc20_asset_grouping/src/ethereum/contracts/V1_1/ERC721BeefLedgerV1_1.sol",
  "ast": {
    "absolutePath": "/home/santiago/projects/beefledger/erc20_asset_grouping/src/ethereum/contracts/V1_1/ERC721BeefLedgerV1_1.sol",
    "exportedSymbols": {
      "ERC721BeefLedgerV1_1": [
        4831
      ]
    },
    "id": 4832,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4722,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:10"
      },
      {
        "absolutePath": "/home/santiago/projects/beefledger/erc20_asset_grouping/src/ethereum/contracts/V1_0/ERC721BeefLedgerV1_0.sol",
        "file": "../V1_0/ERC721BeefLedgerV1_0.sol",
        "id": 4723,
        "nodeType": "ImportDirective",
        "scope": 4832,
        "sourceUnit": 3035,
        "src": "66:42:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/santiago/projects/beefledger/erc20_asset_grouping/src/ethereum/contracts/Grouping.sol",
        "file": "../Grouping.sol",
        "id": 4724,
        "nodeType": "ImportDirective",
        "scope": 4832,
        "sourceUnit": 281,
        "src": "109:25:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4725,
              "name": "ERC721BeefLedgerV1_0",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3034,
              "src": "169:20:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721BeefLedgerV1_0_$3034",
                "typeString": "contract ERC721BeefLedgerV1_0"
              }
            },
            "id": 4726,
            "nodeType": "InheritanceSpecifier",
            "src": "169:20:10"
          }
        ],
        "contractDependencies": [
          366,
          3034
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4831,
        "linearizedBaseContracts": [
          4831,
          3034,
          366
        ],
        "name": "ERC721BeefLedgerV1_1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4730,
            "mutability": "mutable",
            "name": "_groupedUids",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4831,
            "src": "249:49:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 4729,
              "keyType": {
                "id": 4727,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "257:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "249:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 4728,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "268:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4732,
            "mutability": "mutable",
            "name": "_initializedV11",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4831,
            "src": "326:29:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4731,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "326:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4745,
              "nodeType": "Block",
              "src": "394:103:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "412:16:10",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 4736,
                          "name": "_initializedV11",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4732,
                          "src": "413:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6e747261637420616c7265616479207570677261646564",
                        "id": 4738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "430:27:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ab0571b7786dadeee51a3c90a7290e49cbd9672e244e5154a47f3773aa6c495",
                          "typeString": "literal_string \"contract already upgraded\""
                        },
                        "value": "contract already upgraded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ab0571b7786dadeee51a3c90a7290e49cbd9672e244e5154a47f3773aa6c495",
                          "typeString": "literal_string \"contract already upgraded\""
                        }
                      ],
                      "id": 4735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "404:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "404:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4740,
                  "nodeType": "ExpressionStatement",
                  "src": "404:54:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4741,
                      "name": "_initializedV11",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4732,
                      "src": "468:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 4742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "486:4:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "468:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4744,
                  "nodeType": "ExpressionStatement",
                  "src": "468:22:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "76b8a793",
            "id": 4746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeV11",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "384:2:10"
            },
            "returnParameters": {
              "id": 4734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "394:0:10"
            },
            "scope": 4831,
            "src": "362:135:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4829,
              "nodeType": "Block",
              "src": "601:602:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4755,
                          "name": "_groupingAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4751,
                          "src": "619:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "647:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "639:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4756,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "639:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 4759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "639:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "619:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "47726f7570696e6720636f6e747261637420616464726573732063616e6e6f742062652030",
                        "id": 4761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "651:39:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7f58f8f632bb46178c08db01bac812ab0f146a0413a14c556618bb49582d42c",
                          "typeString": "literal_string \"Grouping contract address cannot be 0\""
                        },
                        "value": "Grouping contract address cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7f58f8f632bb46178c08db01bac812ab0f146a0413a14c556618bb49582d42c",
                          "typeString": "literal_string \"Grouping contract address cannot be 0\""
                        }
                      ],
                      "id": 4754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "611:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "611:80:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4763,
                  "nodeType": "ExpressionStatement",
                  "src": "611:80:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4765,
                            "name": "_assets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4749,
                            "src": "709:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 4766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "709:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 4767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "727:3:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "709:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d6178696d756d206f6620746f6b656e7320746f2061646420697320313030",
                        "id": 4769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "732:33:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_691b7a928fccfc93d084a156387208eb42640790a3df1a2aa606ff76adea1bac",
                          "typeString": "literal_string \"maximum of tokens to add is 100\""
                        },
                        "value": "maximum of tokens to add is 100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_691b7a928fccfc93d084a156387208eb42640790a3df1a2aa606ff76adea1bac",
                          "typeString": "literal_string \"maximum of tokens to add is 100\""
                        }
                      ],
                      "id": 4764,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "701:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "701:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4771,
                  "nodeType": "ExpressionStatement",
                  "src": "701:65:10"
                },
                {
                  "assignments": [
                    4773
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4773,
                      "mutability": "mutable",
                      "name": "grouping",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4829,
                      "src": "776:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Grouping_$280",
                        "typeString": "contract Grouping"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4772,
                        "name": "Grouping",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 280,
                        "src": "776:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Grouping_$280",
                          "typeString": "contract Grouping"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4777,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4775,
                        "name": "_groupingAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4751,
                        "src": "805:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4774,
                      "name": "Grouping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "796:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Grouping_$280_$",
                        "typeString": "type(contract Grouping)"
                      }
                    },
                    "id": 4776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "796:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Grouping_$280",
                      "typeString": "contract Grouping"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "776:46:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4781,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "868:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "868:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4779,
                            "name": "grouping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4773,
                            "src": "840:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Grouping_$280",
                              "typeString": "contract Grouping"
                            }
                          },
                          "id": 4780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperatorApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 234,
                          "src": "840:27:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 4783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "840:39:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4778,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "832:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "832:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4785,
                  "nodeType": "ExpressionStatement",
                  "src": "832:48:10"
                },
                {
                  "body": {
                    "id": 4827,
                    "nodeType": "Block",
                    "src": "932:265:10",
                    "statements": [
                      {
                        "assignments": [
                          4798
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4798,
                            "mutability": "mutable",
                            "name": "asset",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 4827,
                            "src": "946:13:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4797,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "946:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 4802,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4799,
                            "name": "_assets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4749,
                            "src": "962:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 4801,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 4800,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4787,
                            "src": "970:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "962:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "946:26:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 4809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 4805,
                                    "name": "asset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4798,
                                    "src": "1002:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4804,
                                  "name": "ownerOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2536,
                                  "src": "994:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view returns (address)"
                                  }
                                },
                                "id": 4806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "994:14:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4807,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1012:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 4808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1012:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "994:28:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "75736572206973206e6f74206f776e6572",
                              "id": 4810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1024:19:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_62289f7ba87c664d85a1a2291bdc4098a056df17487b13ad1b46eb784b25ee5e",
                                "typeString": "literal_string \"user is not owner\""
                              },
                              "value": "user is not owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_62289f7ba87c664d85a1a2291bdc4098a056df17487b13ad1b46eb784b25ee5e",
                                "typeString": "literal_string \"user is not owner\""
                              }
                            ],
                            "id": 4803,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "986:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "986:58:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4812,
                        "nodeType": "ExpressionStatement",
                        "src": "986:58:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4816,
                                  "name": "asset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4798,
                                  "src": "1084:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4814,
                                  "name": "grouping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4773,
                                  "src": "1066:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Grouping_$280",
                                    "typeString": "contract Grouping"
                                  }
                                },
                                "id": 4815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "addAsset",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 266,
                                "src": "1066:17:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) external returns (bool)"
                                }
                              },
                              "id": 4817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1066:24:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "617373657420636f756c64206e6f742062652073746f72656420696e746f2067726f7570696e67",
                              "id": 4818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1092:41:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bde7d8392c8ae804735823f688054b4ed949b25ff64d71832c301db7c84175f7",
                                "typeString": "literal_string \"asset could not be stored into grouping\""
                              },
                              "value": "asset could not be stored into grouping"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bde7d8392c8ae804735823f688054b4ed949b25ff64d71832c301db7c84175f7",
                                "typeString": "literal_string \"asset could not be stored into grouping\""
                              }
                            ],
                            "id": 4813,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1058:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1058:76:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4820,
                        "nodeType": "ExpressionStatement",
                        "src": "1058:76:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 4821,
                              "name": "_groupedUids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4730,
                              "src": "1148:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 4823,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 4822,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4798,
                              "src": "1161:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1148:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 4824,
                            "name": "_groupingAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4751,
                            "src": "1170:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1148:38:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4826,
                        "nodeType": "ExpressionStatement",
                        "src": "1148:38:10"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4790,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4787,
                      "src": "907:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4791,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4749,
                        "src": "911:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 4792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "911:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "907:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4828,
                  "initializationExpression": {
                    "assignments": [
                      4787
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4787,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 4828,
                        "src": "894:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 4786,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "894:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 4789,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "904:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "894:11:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 4795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "927:3:10",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 4794,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4787,
                        "src": "927:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 4796,
                    "nodeType": "ExpressionStatement",
                    "src": "927:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "890:307:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d1d274ce",
            "id": 4830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAssetsToGrouping",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4749,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4830,
                  "src": "532:24:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4747,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "532:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4748,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "532:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4751,
                  "mutability": "mutable",
                  "name": "_groupingAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4830,
                  "src": "558:24:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "531:52:10"
            },
            "returnParameters": {
              "id": 4753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:10"
            },
            "scope": 4831,
            "src": "503:700:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 4832,
        "src": "136:1069:10"
      }
    ],
    "src": "33:1172:10"
  },
  "legacyAST": {
    "absolutePath": "/home/santiago/projects/beefledger/erc20_asset_grouping/src/ethereum/contracts/V1_1/ERC721BeefLedgerV1_1.sol",
    "exportedSymbols": {
      "ERC721BeefLedgerV1_1": [
        4831
      ]
    },
    "id": 4832,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4722,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:10"
      },
      {
        "absolutePath": "/home/santiago/projects/beefledger/erc20_asset_grouping/src/ethereum/contracts/V1_0/ERC721BeefLedgerV1_0.sol",
        "file": "../V1_0/ERC721BeefLedgerV1_0.sol",
        "id": 4723,
        "nodeType": "ImportDirective",
        "scope": 4832,
        "sourceUnit": 3035,
        "src": "66:42:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/santiago/projects/beefledger/erc20_asset_grouping/src/ethereum/contracts/Grouping.sol",
        "file": "../Grouping.sol",
        "id": 4724,
        "nodeType": "ImportDirective",
        "scope": 4832,
        "sourceUnit": 281,
        "src": "109:25:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4725,
              "name": "ERC721BeefLedgerV1_0",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3034,
              "src": "169:20:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721BeefLedgerV1_0_$3034",
                "typeString": "contract ERC721BeefLedgerV1_0"
              }
            },
            "id": 4726,
            "nodeType": "InheritanceSpecifier",
            "src": "169:20:10"
          }
        ],
        "contractDependencies": [
          366,
          3034
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4831,
        "linearizedBaseContracts": [
          4831,
          3034,
          366
        ],
        "name": "ERC721BeefLedgerV1_1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4730,
            "mutability": "mutable",
            "name": "_groupedUids",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4831,
            "src": "249:49:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 4729,
              "keyType": {
                "id": 4727,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "257:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "249:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 4728,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "268:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4732,
            "mutability": "mutable",
            "name": "_initializedV11",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4831,
            "src": "326:29:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4731,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "326:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4745,
              "nodeType": "Block",
              "src": "394:103:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "412:16:10",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 4736,
                          "name": "_initializedV11",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4732,
                          "src": "413:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6e747261637420616c7265616479207570677261646564",
                        "id": 4738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "430:27:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ab0571b7786dadeee51a3c90a7290e49cbd9672e244e5154a47f3773aa6c495",
                          "typeString": "literal_string \"contract already upgraded\""
                        },
                        "value": "contract already upgraded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ab0571b7786dadeee51a3c90a7290e49cbd9672e244e5154a47f3773aa6c495",
                          "typeString": "literal_string \"contract already upgraded\""
                        }
                      ],
                      "id": 4735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "404:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "404:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4740,
                  "nodeType": "ExpressionStatement",
                  "src": "404:54:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4741,
                      "name": "_initializedV11",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4732,
                      "src": "468:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 4742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "486:4:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "468:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4744,
                  "nodeType": "ExpressionStatement",
                  "src": "468:22:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "76b8a793",
            "id": 4746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeV11",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "384:2:10"
            },
            "returnParameters": {
              "id": 4734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "394:0:10"
            },
            "scope": 4831,
            "src": "362:135:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4829,
              "nodeType": "Block",
              "src": "601:602:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4755,
                          "name": "_groupingAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4751,
                          "src": "619:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "647:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "639:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4756,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "639:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 4759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "639:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "619:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "47726f7570696e6720636f6e747261637420616464726573732063616e6e6f742062652030",
                        "id": 4761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "651:39:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7f58f8f632bb46178c08db01bac812ab0f146a0413a14c556618bb49582d42c",
                          "typeString": "literal_string \"Grouping contract address cannot be 0\""
                        },
                        "value": "Grouping contract address cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7f58f8f632bb46178c08db01bac812ab0f146a0413a14c556618bb49582d42c",
                          "typeString": "literal_string \"Grouping contract address cannot be 0\""
                        }
                      ],
                      "id": 4754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "611:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "611:80:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4763,
                  "nodeType": "ExpressionStatement",
                  "src": "611:80:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4765,
                            "name": "_assets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4749,
                            "src": "709:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 4766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "709:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 4767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "727:3:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "709:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d6178696d756d206f6620746f6b656e7320746f2061646420697320313030",
                        "id": 4769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "732:33:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_691b7a928fccfc93d084a156387208eb42640790a3df1a2aa606ff76adea1bac",
                          "typeString": "literal_string \"maximum of tokens to add is 100\""
                        },
                        "value": "maximum of tokens to add is 100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_691b7a928fccfc93d084a156387208eb42640790a3df1a2aa606ff76adea1bac",
                          "typeString": "literal_string \"maximum of tokens to add is 100\""
                        }
                      ],
                      "id": 4764,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "701:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "701:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4771,
                  "nodeType": "ExpressionStatement",
                  "src": "701:65:10"
                },
                {
                  "assignments": [
                    4773
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4773,
                      "mutability": "mutable",
                      "name": "grouping",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4829,
                      "src": "776:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Grouping_$280",
                        "typeString": "contract Grouping"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4772,
                        "name": "Grouping",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 280,
                        "src": "776:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Grouping_$280",
                          "typeString": "contract Grouping"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4777,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4775,
                        "name": "_groupingAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4751,
                        "src": "805:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4774,
                      "name": "Grouping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "796:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Grouping_$280_$",
                        "typeString": "type(contract Grouping)"
                      }
                    },
                    "id": 4776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "796:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Grouping_$280",
                      "typeString": "contract Grouping"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "776:46:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4781,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "868:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "868:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4779,
                            "name": "grouping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4773,
                            "src": "840:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Grouping_$280",
                              "typeString": "contract Grouping"
                            }
                          },
                          "id": 4780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperatorApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 234,
                          "src": "840:27:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 4783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "840:39:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4778,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "832:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "832:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4785,
                  "nodeType": "ExpressionStatement",
                  "src": "832:48:10"
                },
                {
                  "body": {
                    "id": 4827,
                    "nodeType": "Block",
                    "src": "932:265:10",
                    "statements": [
                      {
                        "assignments": [
                          4798
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4798,
                            "mutability": "mutable",
                            "name": "asset",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 4827,
                            "src": "946:13:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4797,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "946:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 4802,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4799,
                            "name": "_assets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4749,
                            "src": "962:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 4801,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 4800,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4787,
                            "src": "970:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "962:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "946:26:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 4809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 4805,
                                    "name": "asset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4798,
                                    "src": "1002:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4804,
                                  "name": "ownerOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2536,
                                  "src": "994:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view returns (address)"
                                  }
                                },
                                "id": 4806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "994:14:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4807,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1012:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 4808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1012:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "994:28:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "75736572206973206e6f74206f776e6572",
                              "id": 4810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1024:19:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_62289f7ba87c664d85a1a2291bdc4098a056df17487b13ad1b46eb784b25ee5e",
                                "typeString": "literal_string \"user is not owner\""
                              },
                              "value": "user is not owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_62289f7ba87c664d85a1a2291bdc4098a056df17487b13ad1b46eb784b25ee5e",
                                "typeString": "literal_string \"user is not owner\""
                              }
                            ],
                            "id": 4803,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "986:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "986:58:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4812,
                        "nodeType": "ExpressionStatement",
                        "src": "986:58:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4816,
                                  "name": "asset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4798,
                                  "src": "1084:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4814,
                                  "name": "grouping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4773,
                                  "src": "1066:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Grouping_$280",
                                    "typeString": "contract Grouping"
                                  }
                                },
                                "id": 4815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "addAsset",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 266,
                                "src": "1066:17:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) external returns (bool)"
                                }
                              },
                              "id": 4817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1066:24:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "617373657420636f756c64206e6f742062652073746f72656420696e746f2067726f7570696e67",
                              "id": 4818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1092:41:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bde7d8392c8ae804735823f688054b4ed949b25ff64d71832c301db7c84175f7",
                                "typeString": "literal_string \"asset could not be stored into grouping\""
                              },
                              "value": "asset could not be stored into grouping"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bde7d8392c8ae804735823f688054b4ed949b25ff64d71832c301db7c84175f7",
                                "typeString": "literal_string \"asset could not be stored into grouping\""
                              }
                            ],
                            "id": 4813,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1058:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1058:76:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4820,
                        "nodeType": "ExpressionStatement",
                        "src": "1058:76:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 4821,
                              "name": "_groupedUids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4730,
                              "src": "1148:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 4823,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 4822,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4798,
                              "src": "1161:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1148:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 4824,
                            "name": "_groupingAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4751,
                            "src": "1170:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1148:38:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4826,
                        "nodeType": "ExpressionStatement",
                        "src": "1148:38:10"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4790,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4787,
                      "src": "907:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4791,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4749,
                        "src": "911:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 4792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "911:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "907:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4828,
                  "initializationExpression": {
                    "assignments": [
                      4787
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4787,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 4828,
                        "src": "894:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 4786,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "894:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 4789,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "904:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "894:11:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 4795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "927:3:10",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 4794,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4787,
                        "src": "927:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 4796,
                    "nodeType": "ExpressionStatement",
                    "src": "927:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "890:307:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d1d274ce",
            "id": 4830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAssetsToGrouping",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4749,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4830,
                  "src": "532:24:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4747,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "532:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4748,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "532:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4751,
                  "mutability": "mutable",
                  "name": "_groupingAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4830,
                  "src": "558:24:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "531:52:10"
            },
            "returnParameters": {
              "id": 4753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:10"
            },
            "scope": 4831,
            "src": "503:700:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 4832,
        "src": "136:1069:10"
      }
    ],
    "src": "33:1172:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-02-08T19:42:06.004Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of return uint256 representing the amount owned by the passed address"
        }
      },
      "burn(uint256)": {
        "details": "Burns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned."
        }
      },
      "exists(uint256)": {
        "details": "Returns whether the specified token exists.",
        "params": {
          "tokenId": "uint256 ID of the token to query the existence of return bool whether the token exists"
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of return address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of return bool whether the given operator is approved by the given owner",
          "owner": "owner address which you want to query the approval of"
        }
      },
      "owner()": {
        "details": "Tells the address of the owner return the address of the owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}